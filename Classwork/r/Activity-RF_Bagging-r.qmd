---
title: "Classification: Bagging and Random Forests"
author: "YOUR NAME HERE"
format: 
  html:
    code-fold: true
    code-line-numbers: true
    code-tools: true
    self-contained: true
editor: visual
execute:
  message: false
---

## Setup

Declare your libraries:

```{r}
#| label: libraries-r
#| include: false
library(tidyverse)
library(tidymodels)
library(glmnet)
library(discrim)
library(rpart)
library(rpart.plot)
library(baguette)
```

# Setup

```{r}

cann <- read_csv("https://www.dropbox.com/s/s2a1uoiegitupjc/cannabis_full.csv?dl=1")

cann <- cann %>%
  mutate(
    Type = factor(Type)
  ) %>%
  rename(
    Spicy = `Spicy/Herbal`
  ) %>%
  drop_na()

cann_cvs <- vfold_cv(cann, v = 5)

cann_recipe <- recipe(Type ~ ., 
                     data = cann) %>%
  step_rm(Strain, Effects, Flavor, Dry, Mouth)

tree_mod <- decision_tree() %>%
  set_engine("rpart") %>%
  set_mode("classification")

tree_wflow <- workflow() %>%
  add_recipe(cann_recipe) %>%
  add_model(tree_mod)

tree_fit_1 <- tree_wflow %>%
  fit(cann)

tree_fitted <- tree_fit_1 %>% 
  pull_workflow_fit()

rpart.plot(tree_fitted$fit)
```

## Bagging

```{r}

bag_tree_spec <- bag_tree() %>%
  set_engine("rpart", times = 5) %>%
  set_mode("classification")

```

## Random Forests

```{r}
rf_spec <- rand_forest(mtry = tune(), min_n = tune(), trees = 10) %>%
  set_engine("ranger") %>%
  set_mode("classification")

rf_grid <- grid_regular(mtry(c(?????)),#decide the smallest and largest values you are willing to consider for how many random parameters to choose
                        ?????)  
```

# Your turn

## Find the best *bagged* model for the cannabis data

## Find the best *random forest* model for the cannabis data

## Report some metrics on your models
